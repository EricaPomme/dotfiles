#!/usr/bin/env sh
set -eu
# IFS: split only on newline and tab to keep spaces in filenames intact
IFS='
	'

# Purpose:
# - Allow non-ASCII characters in committed files.
# - Reject control characters (Unicode category Cc), except TAB, LF, CR.
# - Keep implementation POSIX sh compatible for macOS/Linux portability.

# Gather staged files (Added, Copied, Modified). Newline-delimited for POSIX sh.
# Note: This will mis-handle filenames with embedded newlines (rare). If that
# becomes a concern, consider a Bash-specific variant using -z processing.
staged_files() {
    git diff --cached --name-only --diff-filter=ACM 2>/dev/null || true
}

fail=0

# Check each staged regular file
staged_files | while IFS= read -r f; do
    [ -n "$f" ] || continue
    [ -f "$f" ] || continue

    # Use Perl to detect control chars (Cc) excluding TAB, LF, CR
    # This permits any non-ASCII while rejecting 0x00â€“0x1F, 0x7F, etc.
    if ! perl -ne 'exit 1 if /[\p{Cc}&&[^\t\n\r]]/; END{exit 0}' -- "$f"; then
        printf '%s\n' "[pre-commit] Control/non-printable characters found in: $f" >&2
        # Show a small hexdump preview if xxd exists
        if command -v xxd >/dev/null 2>&1; then
            xxd -g 1 -l 64 -- "$f" >&2 || true
        fi
        fail=1
    fi

done

# POSIX sh: the above while runs in a subshell in many shells; propagate status.
# Re-run a quick test to fetch whether any failures were printed by counting them.
# Simpler approach: rerun the check to set fail=1 if any file fails.
if [ "$fail" -eq 0 ]; then
    # Re-check to set fail if needed
    while IFS= read -r f; do
        [ -n "$f" ] || continue
        [ -f "$f" ] || continue
        if ! perl -ne 'exit 1 if /[\p{Cc}&&[^\t\n\r]]/; END{exit 0}' -- "$f"; then
            fail=1
            break
        fi
    done <<EOF
$(staged_files)
EOF
fi

if [ "$fail" -ne 0 ]; then
    printf '%s\n' "[FAIL] Pre-commit failed: remove control characters before committing (non-ASCII is allowed)." >&2
    exit 1
fi

printf '%s\n' "[PASS] No disallowed control characters detected in staged files." >&2
exit 0

