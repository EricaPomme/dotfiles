# Bail if non-interactive
[[ $- != *i* ]] && return

# Flags and other important variables
DEBUG=${DEBUG:-false}
LOADED_EXTRAS=()

# Source shell integrations and extras (interactive only)
# Note that list_shell_extras is using a tagging + relative path convention
list_shell_extras=(
  "home/.iterm2_shell_integration.zsh" # iTerm2 shell integration
  "home/.zprezto/init.zsh"             # Load prezto if we have it
  "shell/alias_eza.zsh"                # Pretty ls alternative + preferences
  "shell/alias_dots.zsh"               # Dots for to go up good and fastly
  "shell/fzf.zsh"                      # Fuzzy Finder
  "shell/alias_tar.zsh"                # Tar with exclusions
  "shell/git_pull_nudge.zsh"           # Did you forget to pull? (Yes.)
  "shell/weekly_update_check.zsh"      # Check for updates weekly
)

for rel_path in "${list_shell_extras[@]}"; do
  case $rel_path in
  shell/*)
    full_path="${HOME}/dotfiles/${rel_path}"
    ;;
  home/*)
    full_path="${HOME}/${rel_path#home/}"
    ;;
  *)
    full_path="${rel_path}"
    ;;
  esac
  if [[ ! " ${LOADED_EXTRAS[@]} " =~ " ${full_path} " ]] && [[ -f "$full_path" ]]; then
    LOADED_EXTRAS+=("${full_path}")
    source "$full_path"
    if [[ $DEBUG == true ]] && [[ ! " ${LOADED_EXTRAS[@]} " =~ " ${full_path} " ]]; then
      echo "Loaded shell extra: ${full_path}"
    fi
  else
    if [[ $DEBUG == true ]]; then
      if [[ ! -f "$full_path" ]]; then
        echo "Skipping missing shell extra: ${full_path}"
      elif [[ " ${LOADED_EXTRAS[@]} " =~ " ${full_path} " ]]; then
        echo "Skipping already loaded shell extra: ${full_path}"
      fi
    fi
  fi
done

# eza or ls
command -v eza &>/dev/null || alias l='ls -l'

# WAN IP lookups
ipv4() { curl -4fsSL https://ifconfig.me; }
ipv6() {
  if command -v ip &>/dev/null; then
    ip -6 addr show scope global | grep -oP '(?<=inet6 )[0-9A-Fa-f:]+' ||
      ip -6 addr show scope link | grep -oP '(?<=inet6 )[0-9A-Fa-f:]+'
  else
    ifconfig | awk '/inet6/&&!/fe80/ {print $2}'
  fi
}

# UpNote piping
upnote_add() { ~/dotfiles/scripts/upnote_add.py "$@" &>/dev/null; }

# gdu (Go Disk Usage) - avoid conflict with GNU coreutils du
alias gdu='gdu-go'

# pdu (parallel disk usage) - better du replacement
if command -v pdu &>/dev/null; then
  alias du='pdu --top-down --progress --silent-errors'
fi

# Dotfiles management
alias dotfile-install='(cd ~/dotfiles && git pull && ./install.sh) || echo "Failed to pull or install"'
alias dotfile-update='(cd ~/dotfiles && git pull && ./update.sh) || echo "Failed to pull or update"'

if [[ "$LOADED_EXTRAS" =~ "/.zprezto/init.zsh" ]]; then
  autoload -Uz promptinit
  promptinit
  prompt powerlevel10k
fi

# # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# if [[ -f ~/.p10k.zsh ]] && [[ "$LOADED_EXTRAS" =~ "/.zprezto/init.zsh" ]]; then
#   source ~/.p10k.zsh
# fi

# Local
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

# Custom prompt
source "$HOME/dotfiles/shell/prompt.zsh"
