# ZSH Configuration for Linux
# ==========================
# Last updated: 2025-06-07
#
# Changes applied:
# - Restructured to follow macOS theme and organization
# - Enhanced fallback configuration when Prezto is not available
# - Improved editor configuration priority (nvim > code > vim > nano)
# - Better modern command-line tool integration
# - Added comprehensive directory navigation aliases
# - Enhanced path management with dotfiles scripts

# FZF Configuration for better performance (Linux)
# Use fd for faster file finding
if command -v fd > /dev/null 2>&1; then
    export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --strip-cwd-prefix --hidden --follow --exclude .git'
elif command -v rg > /dev/null 2>&1; then
    # Fallback to ripgrep if fd is not available
    export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
else
    # Last resort: optimized find command
    export FZF_DEFAULT_COMMAND='find . -path "*/\.*" -prune -o -type f -print 2> /dev/null | cut -b3-'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# FZF options for better performance and appearance
export FZF_DEFAULT_OPTS='--height 60% --layout=reverse --border --preview "head -100 {}" --preview-window=right:50%:wrap'

# Enable fzf key bindings and completions
if [[ -f "/usr/share/fzf/key-bindings.zsh" ]]; then
    source "/usr/share/fzf/key-bindings.zsh"
elif [[ -f "/usr/share/doc/fzf/examples/key-bindings.zsh" ]]; then
    source "/usr/share/doc/fzf/examples/key-bindings.zsh"
elif [[ -f "$HOME/.fzf/shell/key-bindings.zsh" ]]; then
    source "$HOME/.fzf/shell/key-bindings.zsh"
fi

# FZF completions
if [[ -f "/usr/share/fzf/completion.zsh" ]]; then
    source "/usr/share/fzf/completion.zsh"
elif [[ -f "/usr/share/doc/fzf/examples/completion.zsh" ]]; then
    source "/usr/share/doc/fzf/examples/completion.zsh"
elif [[ -f "$HOME/.fzf/shell/completion.zsh" ]]; then
    source "$HOME/.fzf/shell/completion.zsh"
fi

# Source Prezto if it exists (primary configuration system)
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
else
    echo "Prezto not found at ${ZDOTDIR:-$HOME}/.zprezto. Please install it first."
    # Fallback to basic ZSH config when Prezto is not available
    setopt PROMPT_SUBST
    PS1='%n@%m:%~%# '

    # Since Prezto is not available, set some basic ZSH options
    setopt AUTO_CD
    setopt EXTENDED_GLOB
    setopt SHARE_HISTORY
    setopt HIST_IGNORE_SPACE
    setopt HIST_IGNORE_DUPS
    setopt HIST_EXPIRE_DUPS_FIRST
    
    # Basic history configuration
    HISTFILE=~/.zsh_history
    HISTSIZE=10000
    SAVEHIST=10000
    
    # Basic directory options
    setopt AUTO_PUSHD
    setopt PUSHD_IGNORE_DUPS
    setopt PUSHD_SILENT
    
    # Basic auto/tab completion
    autoload -Uz compinit
    compinit
    zstyle ':completion:*' menu select
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
    _comp_options+=(globdots)        # Include hidden files
fi

# Path configuration
typeset -U path  # Ensure unique paths

# Common paths
[[ -d "$HOME/.local/bin" ]] && path=("$HOME/.local/bin" $path)
[[ -d "$HOME/dotfiles/scripts" ]] && path=("$HOME/dotfiles/scripts" $path)

# Linux-specific paths
[[ -d "/usr/local/bin" ]] && path=("/usr/local/bin" $path)
[[ -d "/opt/local/bin" ]] && path=("/opt/local/bin" $path)

export PATH

# Aliases
alias l='ls -la'
alias ll='ls -lah'
alias la='ls -A'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Distribution-specific package management aliases
if [ -f /etc/os-release ]; then
    . /etc/os-release
    case "$ID" in
        fedora)
            alias update='sudo dnf update'
            alias install='sudo dnf install'
            alias search='dnf search'
            ;;
        ubuntu|debian)
            alias update='sudo apt update && sudo apt upgrade'
            alias install='sudo apt install'
            alias search='apt search'
            ;;
        arch|manjaro)
            alias update='sudo pacman -Syu'
            alias install='sudo pacman -S'
            alias search='pacman -Ss'
            ;;
    esac
fi


# Pyenv configuration
if command -v pyenv &>/dev/null; then
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && path=("$PYENV_ROOT/bin" $path)
    eval "$(pyenv init -)"
fi

# Editor configuration (priority: nvim > code > vim > nano)
if command -v nvim &>/dev/null; then
    export EDITOR="nvim"
    alias e="nvim"
elif command -v code &>/dev/null; then
    export EDITOR="code -w"
    alias e='code -w'
elif command -v vim &>/dev/null; then
    export EDITOR="vim"
    alias e="vim"
else
    export EDITOR="nano"
    alias e="nano"
fi

# Set VISUAL editor
if command -v code &>/dev/null; then
    export VISUAL="code"
else
    export VISUAL="$EDITOR"
fi


# Check for and configure modern command-line tools
if command -v bat &>/dev/null; then
    alias cat='bat'
fi

if command -v eza &>/dev/null; then
    alias l='eza -l -a -g --group-directories-first --time-style=long-iso --hyperlink --classify=always -h -B -M'
elif command -v lsd &>/dev/null; then
    alias l='lsd -la --group-dirs first'
fi

# tar with Linux-specific exclusions
alias tar="tar --exclude='*/.directory'\
              --exclude='*/.Trash-*'\
              --exclude='*/lost+found'\
              --exclude='*/.gvfs'\
              --exclude='*/*~'"

# Network utilities
ipv4() {
    curl -4fsSL https://ifconfig.me
}
ipv6() {
    command -v ip > /dev/null 2>&1 && { ip -6 addr show scope global 2>/dev/null | grep -oP '(?<=inet6 )[0-9a-fA-F:]+' || ip -6 addr show scope link 2>/dev/null | grep -oP '(?<=inet6 )[0-9a-fA-F:]+'; } || { ifconfig 2>/dev/null | grep 'inet6' | grep -v 'fe80:' | awk '{print $2}' || ifconfig 2>/dev/null | grep 'inet6' | grep 'fe80:' | awk '{print $2}'; } || echo "No IPv6 address found"
}

# Git ignore generator
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}

# Linux-specific utilities
if command -v xdg-open > /dev/null; then
    alias open='xdg-open'
fi

# Prompt is now handled by Prezto or fallback configuration
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
    autoload -Uz promptinit
    promptinit
    prompt paradox
    RPROMPT=''
fi

# Check for fastfetch/neofetch before system information display
if command -v fastfetch &>/dev/null; then
    clear
    fastfetch --structure Break:Break:Break:Title:Break:OS:CPU:GPU:Disk:Memory:Uptime:Display:Kernel:Packages:Shell:DE:WM:Terminal
elif command -v neofetch &>/dev/null; then
    clear
    neofetch
fi
